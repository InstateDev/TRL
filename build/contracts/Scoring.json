{
  "contractName": "Scoring",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setVoterRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "candidateRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "votesReceived",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "votingConstraints",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setPeriodicStages",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "votesBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMaxStaking",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getScoring",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLimits",
      "outputs": [
        {
          "name": "",
          "type": "uint256[2]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "scoring",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPeriodicStages",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVoterRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "periodicStages",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCandidateRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setScoring",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMinStaking",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "voterRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setCandidateRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakingConstraints",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_epoch",
          "type": "uint256"
        },
        {
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "score",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526040805190810160405280600060ff16815260200160fd60ff168152506008906002610031929190610072565b506040805190810160405280600060ff16815260200160fd60ff16815250600a90600261005f929190610072565b5034801561006c57600080fd5b506100dc565b82600281019282156100a6579160200282015b828111156100a5578251829060ff16905591602001919060010190610085565b5b5090506100b391906100b7565b5090565b6100d991905b808211156100d55760008160009055506001016100bd565b5090565b90565b610d0d806100eb6000396000f300608060405260043610610133576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ad3034214610138578063144fa6d71461017b57806319de0477146101be57806321df0da71461021557806327ab47251461026c57806333dd6bed146102cd5780633c84107f1461032e5780635521b96f1461036f5780635706d0ec146103b25780635aaa4040146104135780636451db611461043e5780636f89e409146104955780637545ea8a146104e857806378def4ab1461053f5780637f8b76971461059657806381c8a8c4146105ed578063889addf114610644578063ab0854c71461069b578063af6af2ff146106de578063be60040e14610709578063c254666514610760578063dac93e1b146107a3578063fc0c546a146107e4575b600080fd5b34801561014457600080fd5b50610179600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061083b565b005b34801561018757600080fd5b506101bc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061087f565b005b3480156101ca57600080fd5b506101d36108c3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022157600080fd5b5061022a6108e9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027857600080fd5b506102b760048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610913565b6040518082815260200191505060405180910390f35b3480156102d957600080fd5b5061031860048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610980565b6040518082815260200191505060405180910390f35b34801561033a57600080fd5b50610359600480360381019080803590602001909291905050506109a5565b6040518082815260200191505060405180910390f35b34801561037b57600080fd5b506103b0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109bf565b005b3480156103be57600080fd5b506103fd60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a03565b6040518082815260200191505060405180910390f35b34801561041f57600080fd5b50610428610a28565b6040518082815260200191505060405180910390f35b34801561044a57600080fd5b50610453610a41565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104a157600080fd5b506104aa610a6b565b6040518082600260200280838360005b838110156104d55780820151818401526020810190506104ba565b5050505090500191505060405180910390f35b3480156104f457600080fd5b506104fd610ab6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561054b57600080fd5b50610554610adc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105a257600080fd5b506105ab610b06565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105f957600080fd5b50610602610b30565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561065057600080fd5b50610659610b56565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106a757600080fd5b506106dc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b80565b005b3480156106ea57600080fd5b506106f3610bc4565b6040518082815260200191505060405180910390f35b34801561071557600080fd5b5061071e610bdd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561076c57600080fd5b506107a1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c03565b005b3480156107af57600080fd5b506107ce60048036038101908080359060200190929190505050610c47565b6040518082815260200191505060405180910390f35b3480156107f057600080fd5b506107f9610c61565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610978600a60008086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c8790919063ffffffff16565b905092915050565b6000602052816000526040600020602052806000526040600020600091509150505481565b600a816002811015156109b457fe5b016000915090505481565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6001602052816000526040600020602052806000526040600020600091509150505481565b600060086001600281101515610a3a57fe5b0154905090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610a73610cbf565b6008600280602002604051908101604052809291908260028015610aac576020028201915b815481526020019060010190808311610a98575b5050505050905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060086000600281101515610bd657fe5b0154905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600881600281101515610c5657fe5b016000915090505481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080831415610c9a5760009050610cb9565b8183029050818382811515610cab57fe5b04141515610cb557fe5b8090505b92915050565b60408051908101604052806002906020820280388339808201915050905050905600a165627a7a72305820f741a7c0f9078d142b5152bcf4cc09714c255e169defd4b1e7ca12b05ae8adc00029",
  "deployedBytecode": "0x608060405260043610610133576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ad3034214610138578063144fa6d71461017b57806319de0477146101be57806321df0da71461021557806327ab47251461026c57806333dd6bed146102cd5780633c84107f1461032e5780635521b96f1461036f5780635706d0ec146103b25780635aaa4040146104135780636451db611461043e5780636f89e409146104955780637545ea8a146104e857806378def4ab1461053f5780637f8b76971461059657806381c8a8c4146105ed578063889addf114610644578063ab0854c71461069b578063af6af2ff146106de578063be60040e14610709578063c254666514610760578063dac93e1b146107a3578063fc0c546a146107e4575b600080fd5b34801561014457600080fd5b50610179600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061083b565b005b34801561018757600080fd5b506101bc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061087f565b005b3480156101ca57600080fd5b506101d36108c3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561022157600080fd5b5061022a6108e9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027857600080fd5b506102b760048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610913565b6040518082815260200191505060405180910390f35b3480156102d957600080fd5b5061031860048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610980565b6040518082815260200191505060405180910390f35b34801561033a57600080fd5b50610359600480360381019080803590602001909291905050506109a5565b6040518082815260200191505060405180910390f35b34801561037b57600080fd5b506103b0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109bf565b005b3480156103be57600080fd5b506103fd60048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a03565b6040518082815260200191505060405180910390f35b34801561041f57600080fd5b50610428610a28565b6040518082815260200191505060405180910390f35b34801561044a57600080fd5b50610453610a41565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104a157600080fd5b506104aa610a6b565b6040518082600260200280838360005b838110156104d55780820151818401526020810190506104ba565b5050505090500191505060405180910390f35b3480156104f457600080fd5b506104fd610ab6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561054b57600080fd5b50610554610adc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105a257600080fd5b506105ab610b06565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105f957600080fd5b50610602610b30565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561065057600080fd5b50610659610b56565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106a757600080fd5b506106dc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b80565b005b3480156106ea57600080fd5b506106f3610bc4565b6040518082815260200191505060405180910390f35b34801561071557600080fd5b5061071e610bdd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561076c57600080fd5b506107a1600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c03565b005b3480156107af57600080fd5b506107ce60048036038101908080359060200190929190505050610c47565b6040518082815260200191505060405180910390f35b3480156107f057600080fd5b506107f9610c61565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610978600a60008086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c8790919063ffffffff16565b905092915050565b6000602052816000526040600020602052806000526040600020600091509150505481565b600a816002811015156109b457fe5b016000915090505481565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6001602052816000526040600020602052806000526040600020600091509150505481565b600060086001600281101515610a3a57fe5b0154905090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610a73610cbf565b6008600280602002604051908101604052809291908260028015610aac576020028201915b815481526020019060010190808311610a98575b5050505050905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060086000600281101515610bd657fe5b0154905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600881600281101515610c5657fe5b016000915090505481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080831415610c9a5760009050610cb9565b8183029050818382811515610cab57fe5b04141515610cb557fe5b8090505b92915050565b60408051908101604052806002906020820280388339808201915050905050905600a165627a7a72305820f741a7c0f9078d142b5152bcf4cc09714c255e169defd4b1e7ca12b05ae8adc00029",
  "sourceMap": "150:458:7:-;;;967:52:4;;;;;;;;;1007:1;967:52;;;;;;1010:8;967:52;;;;;;;;;;;;;:::i;:::-;;1098:51;;;;;;;;;1137:1;1098:51;;;;;;1140:8;1098:51;;;;;;;;;;;;;:::i;:::-;;150:458:7;8:9:-1;5:2;;;30:1;27;20:12;5:2;150:458:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "150:458:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1557:118:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1557:118:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;1794:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1794:107:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;565:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;565:33:4;;;;;;;;;;;;;;;;;;;;;;;;;;;2771:88;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2771:88:4;;;;;;;;;;;;;;;;;;;;;;;;;;;464:142:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;464:142:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;318:69:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;318:69:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1098:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1098:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2030:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2030:126:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;393:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;393:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3145:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3145:99:4;;;;;;;;;;;;;;;;;;;;;;;3413:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3413:92:4;;;;;;;;;;;;;;;;;;;;;;;;;;;3251:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3251:94:4;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3251:94:4;;;;;;;;;;;;;;;;784:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;784:31:4;;;;;;;;;;;;;;;;;;;;;;;;;;;2927:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2927:107:4;;;;;;;;;;;;;;;;;;;;;;;;;;;2609:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2609:104:4;;;;;;;;;;;;;;;;;;;;;;;;;;;860:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;860:36:4;;;;;;;;;;;;;;;;;;;;;;;;;;;2430:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2430:112:4;;;;;;;;;;;;;;;;;;;;;;;;;;;2225:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2225:114:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;3040:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3040:99:4;;;;;;;;;;;;;;;;;;;;;;;652:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;652:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1303:126:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;967:52;;8:9:-1;5:2;;;30:1;27;20:12;5:2;967:52:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;727:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;727:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;1557:118;1651:16;1626:13;;:42;;;;;;;;;;;;;;;;;;1557:118;:::o;1794:107::-;1877:16;1855:5;;:39;;;;;;;;;;;;;;;;;;1794:107;:::o;565:33::-;;;;;;;;;;;;;:::o;2771:88::-;2812:7;2846:5;;;;;;;;;;;2831:21;;2771:88;:::o;464:142:7:-;534:7;560:39;596:2;560:13;:21;574:6;560:21;;;;;;;;;;;:31;582:8;560:31;;;;;;;;;;;;;;;;:35;;:39;;;;:::i;:::-;553:46;;464:142;;;;:::o;318:69:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1098:51::-;;;;;;;;;;;;;;;;;;;;:::o;2030:126::-;2132:16;2100:14;;:49;;;;;;;;;;;;;;;;;;2030:126;:::o;393:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3145:99::-;3191:7;3216:18;3235:1;3216:21;;;;;;;;;;;3209:28;;3145:99;:::o;3413:92::-;3456:7;3490;;;;;;;;;;;3475:23;;3413:92;:::o;3251:94::-;3292:10;;:::i;:::-;3320:18;3313:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3251:94;:::o;784:31::-;;;;;;;;;;;;;:::o;2927:107::-;2977:7;3012:14;;;;;;;;;;;2997:30;;2927:107;:::o;2609:104::-;2658:7;2692:13;;;;;;;;;;;2677:29;;2609:104;:::o;860:36::-;;;;;;;;;;;;;:::o;2430:112::-;2483:7;2517:17;;;;;;;;;;;2502:33;;2430:112;:::o;2225:114::-;2315:16;2288:7;;:44;;;;;;;;;;;;;;;;;;2225:114;:::o;3040:99::-;3086:7;3111:18;3130:1;3111:21;;;;;;;;;;;3104:28;;3040:99;:::o;652:29::-;;;;;;;;;;;;;:::o;1303:126::-;1405:16;1376:17;;:46;;;;;;;;;;;;;;;;;;1303:126;:::o;967:52::-;;;;;;;;;;;;;;;;;;;;:::o;727:26::-;;;;;;;;;;;;;:::o;203:167:15:-;261:9;287:1;282;:6;278:35;;;305:1;298:8;;;;278:35;326:1;322;:5;318:9;;349:1;344;340;:5;;;;;;;;:10;333:18;;;;;;364:1;357:8;;203:167;;;;;:::o;150:458:7:-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;150:458:7;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"../TRLStorage.sol\";\nimport \"./ScoringInterface.sol\";\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\n\n\ncontract Scoring is TRLStorage, ScoringInterface {\n    using SafeMath for uint256;\n\n    /**\n    * Returns the score of a given account on a given epoch calculated as 10 times the number of votes\n    * @param _epoch Epoch number where the number of votes is taken\n    * @param _account Checked TRL agent\n    */\n    function score(uint256 _epoch, address _account) public view returns (uint256) {\n        return votesReceived[_epoch][_account].mul(10);\n    }\n}\n",
  "sourcePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/scoring/Scoring.sol",
  "ast": {
    "absolutePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/scoring/Scoring.sol",
    "exportedSymbols": {
      "Scoring": [
        969
      ]
    },
    "id": 970,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 939,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "absolutePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/TRLStorage.sol",
        "file": "../TRLStorage.sol",
        "id": 940,
        "nodeType": "ImportDirective",
        "scope": 970,
        "sourceUnit": 868,
        "src": "26:27:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/scoring/ScoringInterface.sol",
        "file": "./ScoringInterface.sol",
        "id": 941,
        "nodeType": "ImportDirective",
        "scope": 970,
        "sourceUnit": 982,
        "src": "54:32:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 942,
        "nodeType": "ImportDirective",
        "scope": 970,
        "sourceUnit": 1724,
        "src": "87:59:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 943,
              "name": "TRLStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 867,
              "src": "170:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TRLStorage_$867",
                "typeString": "contract TRLStorage"
              }
            },
            "id": 944,
            "nodeType": "InheritanceSpecifier",
            "src": "170:10:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 945,
              "name": "ScoringInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 981,
              "src": "182:16:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ScoringInterface_$981",
                "typeString": "contract ScoringInterface"
              }
            },
            "id": 946,
            "nodeType": "InheritanceSpecifier",
            "src": "182:16:7"
          }
        ],
        "contractDependencies": [
          867,
          981
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 969,
        "linearizedBaseContracts": [
          969,
          981,
          867
        ],
        "name": "Scoring",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 949,
            "libraryName": {
              "contractScope": null,
              "id": 947,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1723,
              "src": "211:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1723",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "205:27:7",
            "typeName": {
              "id": 948,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "224:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 967,
              "nodeType": "Block",
              "src": "543:63:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "596:2:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 958,
                            "name": "votesReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 684,
                            "src": "560:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(uint256 => mapping(address => uint256))"
                            }
                          },
                          "id": 960,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 959,
                            "name": "_epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 951,
                            "src": "574:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "560:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 962,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 961,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 953,
                          "src": "582:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "560:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1664,
                      "src": "560:35:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "560:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 957,
                  "id": 966,
                  "nodeType": "Return",
                  "src": "553:46:7"
                }
              ]
            },
            "documentation": "Returns the score of a given account on a given epoch calculated as 10 times the number of votes\n@param _epoch Epoch number where the number of votes is taken\n@param _account Checked TRL agent",
            "id": 968,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "score",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 951,
                  "name": "_epoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 968,
                  "src": "479:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 953,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 968,
                  "src": "495:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "478:34:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 956,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 968,
                  "src": "534:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "533:9:7"
            },
            "scope": 969,
            "src": "464:142:7",
            "stateMutability": "view",
            "superFunction": 980,
            "visibility": "public"
          }
        ],
        "scope": 970,
        "src": "150:458:7"
      }
    ],
    "src": "0:609:7"
  },
  "legacyAST": {
    "absolutePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/scoring/Scoring.sol",
    "exportedSymbols": {
      "Scoring": [
        969
      ]
    },
    "id": 970,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 939,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:7"
      },
      {
        "absolutePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/TRLStorage.sol",
        "file": "../TRLStorage.sol",
        "id": 940,
        "nodeType": "ImportDirective",
        "scope": 970,
        "sourceUnit": 868,
        "src": "26:27:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/scoring/ScoringInterface.sol",
        "file": "./ScoringInterface.sol",
        "id": 941,
        "nodeType": "ImportDirective",
        "scope": 970,
        "sourceUnit": 982,
        "src": "54:32:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 942,
        "nodeType": "ImportDirective",
        "scope": 970,
        "sourceUnit": 1724,
        "src": "87:59:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 943,
              "name": "TRLStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 867,
              "src": "170:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TRLStorage_$867",
                "typeString": "contract TRLStorage"
              }
            },
            "id": 944,
            "nodeType": "InheritanceSpecifier",
            "src": "170:10:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 945,
              "name": "ScoringInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 981,
              "src": "182:16:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ScoringInterface_$981",
                "typeString": "contract ScoringInterface"
              }
            },
            "id": 946,
            "nodeType": "InheritanceSpecifier",
            "src": "182:16:7"
          }
        ],
        "contractDependencies": [
          867,
          981
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 969,
        "linearizedBaseContracts": [
          969,
          981,
          867
        ],
        "name": "Scoring",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 949,
            "libraryName": {
              "contractScope": null,
              "id": 947,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1723,
              "src": "211:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1723",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "205:27:7",
            "typeName": {
              "id": 948,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "224:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 967,
              "nodeType": "Block",
              "src": "543:63:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "596:2:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 958,
                            "name": "votesReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 684,
                            "src": "560:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(uint256 => mapping(address => uint256))"
                            }
                          },
                          "id": 960,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 959,
                            "name": "_epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 951,
                            "src": "574:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "560:21:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 962,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 961,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 953,
                          "src": "582:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "560:31:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1664,
                      "src": "560:35:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "560:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 957,
                  "id": 966,
                  "nodeType": "Return",
                  "src": "553:46:7"
                }
              ]
            },
            "documentation": "Returns the score of a given account on a given epoch calculated as 10 times the number of votes\n@param _epoch Epoch number where the number of votes is taken\n@param _account Checked TRL agent",
            "id": 968,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "score",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 951,
                  "name": "_epoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 968,
                  "src": "479:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 950,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 953,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 968,
                  "src": "495:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "495:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "478:34:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 956,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 968,
                  "src": "534:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "533:9:7"
            },
            "scope": 969,
            "src": "464:142:7",
            "stateMutability": "view",
            "superFunction": 980,
            "visibility": "public"
          }
        ],
        "scope": 970,
        "src": "150:458:7"
      }
    ],
    "src": "0:609:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-08-20T21:25:46.666Z"
}