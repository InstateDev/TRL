{
  "contractName": "TRLProxy",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "candidateRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "votesReceived",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "votingConstraints",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "votesBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "periodicStages",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "voterRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakingConstraints",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "setContractLogic",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526040805190810160405280600060ff16815260200160fd60ff1681525060079060026100319291906100a6565b506040805190810160405280600060ff16815260200160fd60ff16815250600990600261005f9291906100a6565b5033600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610110565b82600281019282156100da579160200282015b828111156100d9578251829060ff169055916020019190600101906100b9565b5b5090506100e791906100eb565b5090565b61010d91905b808211156101095760008160009055506001016100f1565b5090565b90565b61080e8061011f6000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806319de04771461011157806333dd6bed146101685780633c84107f146101c95780635706d0ec1461020a57806381c8a8c41461026b5780638da5cb5b146102c2578063be60040e14610319578063dac93e1b14610370578063f2fde38b146103b1578063f431563b146103f4578063fc0c546a1461044f575b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060405136600082376000803683855af43d806000843e816000811461010257600181146101065761010a565b8184fd5b8184f35b5050505050005b34801561011d57600080fd5b506101266104a6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561017457600080fd5b506101b360048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104cc565b6040518082815260200191505060405180910390f35b3480156101d557600080fd5b506101f4600480360381019080803590602001909291905050506104f1565b6040518082815260200191505060405180910390f35b34801561021657600080fd5b5061025560048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061050b565b6040518082815260200191505060405180910390f35b34801561027757600080fd5b50610280610530565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102ce57600080fd5b506102d7610556565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032557600080fd5b5061032e61057c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561037c57600080fd5b5061039b600480360381019080803590602001909291905050506105a2565b6040518082815260200191505060405180910390f35b3480156103bd57600080fd5b506103f2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105bc565b005b34801561040057600080fd5b50610435600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610714565b604051808215151515815260200191505060405180910390f35b34801561045b57600080fd5b506104646107bc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000602052816000526040600020602052806000526040600020600091509150505481565b60098160028110151561050057fe5b016000915090505481565b6001602052816000526040600020602052806000526040600020600091509150505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6007816002811015156105b157fe5b016000915090505481565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561061857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561065457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561077257600080fd5b81600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820a1acc447be233f3984ab2628164cbbd913bb0797c0c58c9c0ea78762dd6319630029",
  "deployedBytecode": "0x6080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806319de04771461011157806333dd6bed146101685780633c84107f146101c95780635706d0ec1461020a57806381c8a8c41461026b5780638da5cb5b146102c2578063be60040e14610319578063dac93e1b14610370578063f2fde38b146103b1578063f431563b146103f4578063fc0c546a1461044f575b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060405136600082376000803683855af43d806000843e816000811461010257600181146101065761010a565b8184fd5b8184f35b5050505050005b34801561011d57600080fd5b506101266104a6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561017457600080fd5b506101b360048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104cc565b6040518082815260200191505060405180910390f35b3480156101d557600080fd5b506101f4600480360381019080803590602001909291905050506104f1565b6040518082815260200191505060405180910390f35b34801561021657600080fd5b5061025560048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061050b565b6040518082815260200191505060405180910390f35b34801561027757600080fd5b50610280610530565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102ce57600080fd5b506102d7610556565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032557600080fd5b5061032e61057c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561037c57600080fd5b5061039b600480360381019080803590602001909291905050506105a2565b6040518082815260200191505060405180910390f35b3480156103bd57600080fd5b506103f2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105bc565b005b34801561040057600080fd5b50610435600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610714565b604051808215151515815260200191505060405180910390f35b34801561045b57600080fd5b506104646107bc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000602052816000526040600020602052806000526040600020600091509150505481565b60098160028110151561050057fe5b016000915090505481565b6001602052816000526040600020602052806000526040600020600091509150505481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6007816002811015156105b157fe5b016000915090505481565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561061857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561065457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561077257600080fd5b81600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820a1acc447be233f3984ab2628164cbbd913bb0797c0c58c9c0ea78762dd6319630029",
  "sourceMap": "118:695:1:-;;;861:52:4;;;;;;;;;901:1;861:52;;;;;;904:8;861:52;;;;;;;;;;;;;:::i;:::-;;992:51;;;;;;;;;1031:1;992:51;;;;;;1034:8;992:51;;;;;;;;;;;;;:::i;:::-;;509:10:14;501:5;;:18;;;;;;;;;;;;;;;;;;118:695:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "118:695:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;402:14;419:9;;;;;;;;;;;402:26;;478:4;472:11;517:12;514:1;509:3;496:34;605:1;602;588:12;583:3;575:6;570:3;557:50;632:14;682:4;679:1;674:3;659:28;707:6;731:1;726:28;;;;772:1;767:28;;;;700:95;;726:28;747:4;742:3;735:17;767:28;788:4;783:3;776:17;700:95;;447:358;;;;118:695;521:33:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;521:33:4;;;;;;;;;;;;;;;;;;;;;;;;;;;274:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;274:69:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;992:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;992:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;349:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;349:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;754:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;754:36:4;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:14;;;;;;;;;;;;;;;;;;;;;;;;;;;608:29:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;608:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;861:52;;8:9:-1;5:2;;;30:1;27;20:12;5:2;861:52:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;832:174:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;832:174:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;190:169:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;190:169:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;683:26:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;683:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;521:33;;;;;;;;;;;;;:::o;274:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;992:51::-;;;;;;;;;;;;;;;;;;;;:::o;349:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;754:36::-;;;;;;;;;;;;;:::o;238:20:14:-;;;;;;;;;;;;;:::o;608:29:4:-;;;;;;;;;;;;;:::o;861:52::-;;;;;;;;;;;;;;;;;;;;:::o;832:174:14:-;653:5;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;928:1;908:22;;:8;:22;;;;900:31;;;;;;;;970:8;942:37;;963:5;;;;;;;;;;;942:37;;;;;;;;;;;;993:8;985:5;;:16;;;;;;;;;;;;;;;;;;832:174;:::o;190:169:1:-;250:12;295:5;;;;;;;;;;;281:19;;:10;:19;;;273:28;;;;;;;;323:8;311:9;;:20;;;;;;;;;;;;;;;;;;348:4;341:11;;190:169;;;:::o;683:26:4:-;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./TRLStorage.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\ncontract TRLProxy is TRLStorage, Ownable {\n\n    address trl_logic;\n\n    function setContractLogic(address _account) public returns (bool success){\n        require(msg.sender == owner);\n        trl_logic = _account;\n        return true;\n    }\n\n    function () payable public {\n        address target = trl_logic;\n        assembly {\n            let ptr := mload(0x40)\n            calldatacopy(ptr, 0, calldatasize)\n            let result := delegatecall(gas, target, ptr, calldatasize, 0, 0)\n            let size := returndatasize\n            returndatacopy(ptr, 0, size)\n            switch result\n            case 0 { revert(ptr, size) }\n            case 1 { return(ptr, size) }\n        }\n    }\n}",
  "sourcePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/Proxy.sol",
  "ast": {
    "absolutePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/Proxy.sol",
    "exportedSymbols": {
      "TRLProxy": [
        97
      ]
    },
    "id": 98,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/TRLStorage.sol",
        "file": "./TRLStorage.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 769,
        "src": "26:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 1637,
        "src": "53:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 61,
              "name": "TRLStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 768,
              "src": "139:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TRLStorage_$768",
                "typeString": "contract TRLStorage"
              }
            },
            "id": 62,
            "nodeType": "InheritanceSpecifier",
            "src": "139:10:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 63,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1636,
              "src": "151:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1636",
                "typeString": "contract Ownable"
              }
            },
            "id": 64,
            "nodeType": "InheritanceSpecifier",
            "src": "151:7:1"
          }
        ],
        "contractDependencies": [
          768,
          1636
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 97,
        "linearizedBaseContracts": [
          97,
          1636,
          768
        ],
        "name": "TRLProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 66,
            "name": "trl_logic",
            "nodeType": "VariableDeclaration",
            "scope": 97,
            "src": "166:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 65,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "166:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "263:96:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 74,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2068,
                            "src": "281:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "281:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1584,
                          "src": "295:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "281:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 73,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2071,
                        2072
                      ],
                      "referencedDeclaration": 2071,
                      "src": "273:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "273:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "273:28:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "trl_logic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "311:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 81,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "323:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "311:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "311:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "348:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 72,
                  "id": 85,
                  "nodeType": "Return",
                  "src": "341:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 87,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setContractLogic",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "216:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "216:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "215:18:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "250:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "250:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "249:14:1"
            },
            "scope": 97,
            "src": "190:169:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "392:419:1",
              "statements": [
                {
                  "assignments": [
                    91
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91,
                      "name": "target",
                      "nodeType": "VariableDeclaration",
                      "scope": 96,
                      "src": "402:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 90,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "402:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 93,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 92,
                    "name": "trl_logic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "419:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "402:26:1"
                },
                {
                  "externalReferences": [
                    {
                      "target": {
                        "declaration": 91,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "575:6:1",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 94,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    calldatacopy(ptr, 0, calldatasize())\n    let result := delegatecall(gas(), target, ptr, calldatasize(), 0, 0)\n    let size := returndatasize()\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    case 1 {\n        return(ptr, size)\n    }\n}",
                  "src": "438:373:1"
                }
              ]
            },
            "documentation": null,
            "id": 96,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "374:2:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "392:0:1"
            },
            "scope": 97,
            "src": "365:446:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 98,
        "src": "118:695:1"
      }
    ],
    "src": "0:813:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/Proxy.sol",
    "exportedSymbols": {
      "TRLProxy": [
        97
      ]
    },
    "id": 98,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/TRLStorage.sol",
        "file": "./TRLStorage.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 769,
        "src": "26:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 1637,
        "src": "53:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 61,
              "name": "TRLStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 768,
              "src": "139:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TRLStorage_$768",
                "typeString": "contract TRLStorage"
              }
            },
            "id": 62,
            "nodeType": "InheritanceSpecifier",
            "src": "139:10:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 63,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1636,
              "src": "151:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1636",
                "typeString": "contract Ownable"
              }
            },
            "id": 64,
            "nodeType": "InheritanceSpecifier",
            "src": "151:7:1"
          }
        ],
        "contractDependencies": [
          768,
          1636
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 97,
        "linearizedBaseContracts": [
          97,
          1636,
          768
        ],
        "name": "TRLProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 66,
            "name": "trl_logic",
            "nodeType": "VariableDeclaration",
            "scope": 97,
            "src": "166:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 65,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "166:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "263:96:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 74,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2068,
                            "src": "281:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "281:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1584,
                          "src": "295:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "281:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 73,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2071,
                        2072
                      ],
                      "referencedDeclaration": 2071,
                      "src": "273:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "273:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "273:28:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "trl_logic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "311:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 81,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "323:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "311:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "311:20:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "348:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 72,
                  "id": 85,
                  "nodeType": "Return",
                  "src": "341:11:1"
                }
              ]
            },
            "documentation": null,
            "id": 87,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setContractLogic",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "216:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "216:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "215:18:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "250:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "250:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "249:14:1"
            },
            "scope": 97,
            "src": "190:169:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "392:419:1",
              "statements": [
                {
                  "assignments": [
                    91
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91,
                      "name": "target",
                      "nodeType": "VariableDeclaration",
                      "scope": 96,
                      "src": "402:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 90,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "402:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 93,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 92,
                    "name": "trl_logic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "419:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "402:26:1"
                },
                {
                  "externalReferences": [
                    {
                      "target": {
                        "declaration": 91,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "575:6:1",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 94,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    calldatacopy(ptr, 0, calldatasize())\n    let result := delegatecall(gas(), target, ptr, calldatasize(), 0, 0)\n    let size := returndatasize()\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    case 1 {\n        return(ptr, size)\n    }\n}",
                  "src": "438:373:1"
                }
              ]
            },
            "documentation": null,
            "id": 96,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "374:2:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "392:0:1"
            },
            "scope": 97,
            "src": "365:446:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 98,
        "src": "118:695:1"
      }
    ],
    "src": "0:813:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-08-15T16:37:56.388Z"
}