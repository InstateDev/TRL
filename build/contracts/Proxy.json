{
  "contractName": "Proxy",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setVoterRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "candidateRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "votesReceived",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "votingConstraints",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setPeriodicStages",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "votesBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMaxStaking",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getScoring",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLimits",
      "outputs": [
        {
          "name": "",
          "type": "uint256[2]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "scoring",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getPeriodicStages",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVoterRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "periodicStages",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCandidateRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setScoring",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMinStaking",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "voterRegistry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setCandidateRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "logicContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakingConstraints",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "setContractLogic",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proxyType",
      "outputs": [
        {
          "name": "proxyTypeId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526040805190810160405280600060ff16815260200160fd60ff1681525060089060026100319291906100a6565b506040805190810160405280600060ff16815260200160fd60ff16815250600a90600261005f9291906100a6565b5033600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610110565b82600281019282156100da579160200282015b828111156100d9578251829060ff169055916020019190600101906100b9565b5b5090506100e791906100eb565b5090565b61010d91905b808211156101095760008160009055506001016100f1565b5090565b90565b6110cd8061011f6000396000f30060806040526004361061016a576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ad30342146101b1578063144fa6d7146101f457806319de04771461023757806321df0da71461028e57806333dd6bed146102e55780633c84107f146103465780634555d5c9146103875780635521b96f146103b25780635706d0ec146103f55780635aaa4040146104565780635c60da1b146104815780636451db61146104d85780636f89e4091461052f5780637545ea8a1461058257806378def4ab146105d95780637f8b76971461063057806381c8a8c414610687578063889addf1146106de5780638da5cb5b14610735578063ab0854c71461078c578063af6af2ff146107cf578063be60040e146107fa578063c254666514610851578063cc0e97c914610894578063dac93e1b146108eb578063f2fde38b1461092c578063f431563b1461096f578063fc0c546a146109ca575b6000610174610a21565b905060405136600082376000803683855af43d806000843e81600081146101a257600181146101a6576101aa565b8184fd5b8184f35b5050505050005b3480156101bd57600080fd5b506101f2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a4b565b005b34801561020057600080fd5b50610235600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a8f565b005b34801561024357600080fd5b5061024c610ad3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029a57600080fd5b506102a3610af9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102f157600080fd5b5061033060048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b23565b6040518082815260200191505060405180910390f35b34801561035257600080fd5b5061037160048036038101908080359060200190929190505050610b48565b6040518082815260200191505060405180910390f35b34801561039357600080fd5b5061039c610b62565b6040518082815260200191505060405180910390f35b3480156103be57600080fd5b506103f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b6b565b005b34801561040157600080fd5b5061044060048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610baf565b6040518082815260200191505060405180910390f35b34801561046257600080fd5b5061046b610bd4565b6040518082815260200191505060405180910390f35b34801561048d57600080fd5b50610496610a21565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104e457600080fd5b506104ed610bed565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561053b57600080fd5b50610544610c17565b6040518082600260200280838360005b8381101561056f578082015181840152602081019050610554565b5050505090500191505060405180910390f35b34801561058e57600080fd5b50610597610c62565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105e557600080fd5b506105ee610c88565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561063c57600080fd5b50610645610cb2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561069357600080fd5b5061069c610cdc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106ea57600080fd5b506106f3610d02565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561074157600080fd5b5061074a610d2c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561079857600080fd5b506107cd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d52565b005b3480156107db57600080fd5b506107e4610d96565b6040518082815260200191505060405180910390f35b34801561080657600080fd5b5061080f610daf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561085d57600080fd5b50610892600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dd5565b005b3480156108a057600080fd5b506108a9610e19565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108f757600080fd5b5061091660048036038101908080359060200190929190505050610e3f565b6040518082815260200191505060405180910390f35b34801561093857600080fd5b5061096d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e59565b005b34801561097b57600080fd5b506109b0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fb1565b604051808215151515815260200191505060405180910390f35b3480156109d657600080fd5b506109df611059565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000602052816000526040600020602052806000526040600020600091509150505481565b600a81600281101515610b5757fe5b016000915090505481565b60006002905090565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6001602052816000526040600020602052806000526040600020600091509150505481565b600060086001600281101515610be657fe5b0154905090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610c1f61107f565b6008600280602002604051908101604052809291908260028015610c58576020028201915b815481526020019060010190808311610c44575b5050505050905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060086000600281101515610da857fe5b0154905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600881600281101515610e4e57fe5b016000915090505481565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610eb557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610ef157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561100f57600080fd5b81600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60408051908101604052806002906020820280388339808201915050905050905600a165627a7a72305820de53914774bb8e362d5f31d5f0831ecc9a1a4ee14aae6b257c09ae0af92406ad0029",
  "deployedBytecode": "0x60806040526004361061016a576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ad30342146101b1578063144fa6d7146101f457806319de04771461023757806321df0da71461028e57806333dd6bed146102e55780633c84107f146103465780634555d5c9146103875780635521b96f146103b25780635706d0ec146103f55780635aaa4040146104565780635c60da1b146104815780636451db61146104d85780636f89e4091461052f5780637545ea8a1461058257806378def4ab146105d95780637f8b76971461063057806381c8a8c414610687578063889addf1146106de5780638da5cb5b14610735578063ab0854c71461078c578063af6af2ff146107cf578063be60040e146107fa578063c254666514610851578063cc0e97c914610894578063dac93e1b146108eb578063f2fde38b1461092c578063f431563b1461096f578063fc0c546a146109ca575b6000610174610a21565b905060405136600082376000803683855af43d806000843e81600081146101a257600181146101a6576101aa565b8184fd5b8184f35b5050505050005b3480156101bd57600080fd5b506101f2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a4b565b005b34801561020057600080fd5b50610235600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a8f565b005b34801561024357600080fd5b5061024c610ad3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029a57600080fd5b506102a3610af9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102f157600080fd5b5061033060048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b23565b6040518082815260200191505060405180910390f35b34801561035257600080fd5b5061037160048036038101908080359060200190929190505050610b48565b6040518082815260200191505060405180910390f35b34801561039357600080fd5b5061039c610b62565b6040518082815260200191505060405180910390f35b3480156103be57600080fd5b506103f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b6b565b005b34801561040157600080fd5b5061044060048036038101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610baf565b6040518082815260200191505060405180910390f35b34801561046257600080fd5b5061046b610bd4565b6040518082815260200191505060405180910390f35b34801561048d57600080fd5b50610496610a21565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104e457600080fd5b506104ed610bed565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561053b57600080fd5b50610544610c17565b6040518082600260200280838360005b8381101561056f578082015181840152602081019050610554565b5050505090500191505060405180910390f35b34801561058e57600080fd5b50610597610c62565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156105e557600080fd5b506105ee610c88565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561063c57600080fd5b50610645610cb2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561069357600080fd5b5061069c610cdc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106ea57600080fd5b506106f3610d02565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561074157600080fd5b5061074a610d2c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561079857600080fd5b506107cd600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d52565b005b3480156107db57600080fd5b506107e4610d96565b6040518082815260200191505060405180910390f35b34801561080657600080fd5b5061080f610daf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561085d57600080fd5b50610892600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610dd5565b005b3480156108a057600080fd5b506108a9610e19565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156108f757600080fd5b5061091660048036038101908080359060200190929190505050610e3f565b6040518082815260200191505060405180910390f35b34801561093857600080fd5b5061096d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e59565b005b34801561097b57600080fd5b506109b0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fb1565b604051808215151515815260200191505060405180910390f35b3480156109d657600080fd5b506109df611059565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000602052816000526040600020602052806000526040600020600091509150505481565b600a81600281101515610b5757fe5b016000915090505481565b60006002905090565b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6001602052816000526040600020602052806000526040600020600091509150505481565b600060086001600281101515610be657fe5b0154905090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610c1f61107f565b6008600280602002604051908101604052809291908260028015610c58576020028201915b815481526020019060010190808311610c44575b5050505050905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060086000600281101515610da857fe5b0154905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600881600281101515610e4e57fe5b016000915090505481565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610eb557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610ef157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561100f57600080fd5b81600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60408051908101604052806002906020820280388339808201915050905050905600a165627a7a72305820de53914774bb8e362d5f31d5f0831ecc9a1a4ee14aae6b257c09ae0af92406ad0029",
  "sourceMap": "240:1366:1:-;;;967:52:4;;;;;;;;;1007:1;967:52;;;;;;1010:8;967:52;;;;;;;;;;;;;:::i;:::-;;1098:51;;;;;;;;;1137:1;1098:51;;;;;;1140:8;1098:51;;;;;;;;;;;;;:::i;:::-;;509:10:16;501:5;;:18;;;;;;;;;;;;;;;;;;240:1366:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "240:1366:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1188:14;1205:16;:14;:16::i;:::-;1188:33;;1271:4;1265:11;1310:12;1307:1;1302:3;1289:34;1398:1;1395;1381:12;1376:3;1368:6;1363:3;1350:50;1425:14;1475:4;1472:1;1467:3;1452:28;1500:6;1524:1;1519:28;;;;1565:1;1560:28;;;;1493:95;;1519:28;1540:4;1535:3;1528:17;1560:28;1581:4;1576:3;1569:17;1493:95;;1240:358;;;;240:1366;1557:118:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1557:118:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;1794:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1794:107:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;565:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;565:33:4;;;;;;;;;;;;;;;;;;;;;;;;;;;2771:88;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2771:88:4;;;;;;;;;;;;;;;;;;;;;;;;;;;318:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;318:69:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1098:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1098:51:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:88:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;778:88:1;;;;;;;;;;;;;;;;;;;;;;;2030:126:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2030:126:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;393:68;;8:9:-1;5:2;;;30:1;27;20:12;5:2;393:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3145:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3145:99:4;;;;;;;;;;;;;;;;;;;;;;;953:93:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;953:93:1;;;;;;;;;;;;;;;;;;;;;;;;;;;3413:92:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3413:92:4;;;;;;;;;;;;;;;;;;;;;;;;;;;3251:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3251:94:4;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3251:94:4;;;;;;;;;;;;;;;;784:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;784:31:4;;;;;;;;;;;;;;;;;;;;;;;;;;;2927:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2927:107:4;;;;;;;;;;;;;;;;;;;;;;;;;;;2609:104;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2609:104:4;;;;;;;;;;;;;;;;;;;;;;;;;;;860:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;860:36:4;;;;;;;;;;;;;;;;;;;;;;;;;;;2430:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2430:112:4;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:16;;;;;;;;;;;;;;;;;;;;;;;;;;;2225:114:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2225:114:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;3040:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3040:99:4;;;;;;;;;;;;;;;;;;;;;;;652:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;652:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;1303:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1303:126:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;285:28:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;285:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;967:52:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;967:52:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;832:174:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;832:174:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;502::1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;502:174:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;727:26:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;727:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;953:93:1;1000:7;1026:13;;;;;;;;;;;1019:20;;953:93;:::o;1557:118:4:-;1651:16;1626:13;;:42;;;;;;;;;;;;;;;;;;1557:118;:::o;1794:107::-;1877:16;1855:5;;:39;;;;;;;;;;;;;;;;;;1794:107;:::o;565:33::-;;;;;;;;;;;;;:::o;2771:88::-;2812:7;2846:5;;;;;;;;;;;2831:21;;2771:88;:::o;318:69::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1098:51::-;;;;;;;;;;;;;;;;;;;;:::o;778:88:1:-;820:19;858:1;851:8;;778:88;:::o;2030:126:4:-;2132:16;2100:14;;:49;;;;;;;;;;;;;;;;;;2030:126;:::o;393:68::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3145:99::-;3191:7;3216:18;3235:1;3216:21;;;;;;;;;;;3209:28;;3145:99;:::o;3413:92::-;3456:7;3490;;;;;;;;;;;3475:23;;3413:92;:::o;3251:94::-;3292:10;;:::i;:::-;3320:18;3313:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3251:94;:::o;784:31::-;;;;;;;;;;;;;:::o;2927:107::-;2977:7;3012:14;;;;;;;;;;;2997:30;;2927:107;:::o;2609:104::-;2658:7;2692:13;;;;;;;;;;;2677:29;;2609:104;:::o;860:36::-;;;;;;;;;;;;;:::o;2430:112::-;2483:7;2517:17;;;;;;;;;;;2502:33;;2430:112;:::o;238:20:16:-;;;;;;;;;;;;;:::o;2225:114:4:-;2315:16;2288:7;;:44;;;;;;;;;;;;;;;;;;2225:114;:::o;3040:99::-;3086:7;3111:18;3130:1;3111:21;;;;;;;;;;;3104:28;;3040:99;:::o;652:29::-;;;;;;;;;;;;;:::o;1303:126::-;1405:16;1376:17;;:46;;;;;;;;;;;;;;;;;;1303:126;:::o;285:28:1:-;;;;;;;;;;;;;:::o;967:52:4:-;;;;;;;;;;;;;;;;;;;;:::o;832:174:16:-;653:5;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;928:1;908:22;;:8;:22;;;;900:31;;;;;;;;970:8;942:37;;963:5;;;;;;;;;;;942:37;;;;;;;;;;;;993:8;985:5;;:16;;;;;;;;;;;;;;;;;;832:174;:::o;502::1:-;562:12;608:5;;;;;;;;;;;594:19;;:10;:19;;;586:28;;;;;;;;640:8;624:13;;:24;;;;;;;;;;;;;;;;;;665:4;658:11;;502:174;;;:::o;727:26:4:-;;;;;;;;;;;;;:::o;240:1366:1:-;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;240:1366:1;;;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./TRLStorage.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n/**\n * A proxy Smart Contract following ERC897. Delegate calls to a target contract accessible via implementation() \n */\n\ncontract Proxy is TRLStorage, Ownable {\n\n    address public logicContract;\n    \n     /**\n     * @dev Sets the target address where the calls will be delegated. \n     * @param _account Target address, that will be accesible via implementation()\n     */\n     \n    function setContractLogic(address _account) public returns (bool success) {\n        require(msg.sender == owner);\n        logicContract = _account;\n        return true;\n    }\n\n    /**\n     * @dev ERC897, whether it is a forwarding (1) or an upgradeable (2) proxy\n     */\n\n    function proxyType() public pure returns (uint256 proxyTypeId) {\n        return 2;\n    }\n\n    /**\n    * @dev ERC897, the address the proxy would delegate calls to\n    */\n\n    function implementation() public view returns (address) {\n        return logicContract;\n    }\n\n    /**\n    * @dev Proxy function. Delegate calls to the address taken on implementation()\n    */\n\n    function () payable public {\n        address target = implementation();\n        assembly {\n            let ptr := mload(0x40)\n            calldatacopy(ptr, 0, calldatasize)\n            let result := delegatecall(gas, target, ptr, calldatasize, 0, 0)\n            let size := returndatasize\n            returndatacopy(ptr, 0, size)\n            switch result\n            case 0 { revert(ptr, size) }\n            case 1 { return(ptr, size) }\n        }\n    }\n}",
  "sourcePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/Proxy.sol",
  "ast": {
    "absolutePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/Proxy.sol",
    "exportedSymbols": {
      "Proxy": [
        114
      ]
    },
    "id": 115,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/TRLStorage.sol",
        "file": "./TRLStorage.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 868,
        "src": "26:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 1780,
        "src": "53:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 61,
              "name": "TRLStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 867,
              "src": "258:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TRLStorage_$867",
                "typeString": "contract TRLStorage"
              }
            },
            "id": 62,
            "nodeType": "InheritanceSpecifier",
            "src": "258:10:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 63,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1779,
              "src": "270:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1779",
                "typeString": "contract Ownable"
              }
            },
            "id": 64,
            "nodeType": "InheritanceSpecifier",
            "src": "270:7:1"
          }
        ],
        "contractDependencies": [
          867,
          1779
        ],
        "contractKind": "contract",
        "documentation": "A proxy Smart Contract following ERC897. Delegate calls to a target contract accessible via implementation() ",
        "fullyImplemented": true,
        "id": 114,
        "linearizedBaseContracts": [
          114,
          1779,
          867
        ],
        "name": "Proxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 66,
            "name": "logicContract",
            "nodeType": "VariableDeclaration",
            "scope": 114,
            "src": "285:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 65,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "285:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "576:100:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 74,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2211,
                            "src": "594:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "594:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1727,
                          "src": "608:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "594:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 73,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2214,
                        2215
                      ],
                      "referencedDeclaration": 2214,
                      "src": "586:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "586:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "586:28:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "logicContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "624:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 81,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "640:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "624:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "624:24:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "665:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 72,
                  "id": 85,
                  "nodeType": "Return",
                  "src": "658:11:1"
                }
              ]
            },
            "documentation": "@dev Sets the target address where the calls will be delegated. \n@param _account Target address, that will be accesible via implementation()",
            "id": 87,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setContractLogic",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "528:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "527:18:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "562:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "561:14:1"
            },
            "scope": 114,
            "src": "502:174:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "841:25:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "32",
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "858:1:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "functionReturnParameters": 91,
                  "id": 93,
                  "nodeType": "Return",
                  "src": "851:8:1"
                }
              ]
            },
            "documentation": "@dev ERC897, whether it is a forwarding (1) or an upgradeable (2) proxy",
            "id": 95,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "proxyType",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "796:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "name": "proxyTypeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "820:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "819:21:1"
            },
            "scope": 114,
            "src": "778:88:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "1009:37:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 100,
                    "name": "logicContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "1026:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 99,
                  "id": 101,
                  "nodeType": "Return",
                  "src": "1019:20:1"
                }
              ]
            },
            "documentation": "@dev ERC897, the address the proxy would delegate calls to",
            "id": 103,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "implementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "976:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1000:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "999:9:1"
            },
            "scope": 114,
            "src": "953:93:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1178:426:1",
              "statements": [
                {
                  "assignments": [
                    107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 107,
                      "name": "target",
                      "nodeType": "VariableDeclaration",
                      "scope": 113,
                      "src": "1188:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 106,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1188:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 110,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 108,
                      "name": "implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "1205:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1205:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1188:33:1"
                },
                {
                  "externalReferences": [
                    {
                      "target": {
                        "declaration": 107,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1368:6:1",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 111,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    calldatacopy(ptr, 0, calldatasize())\n    let result := delegatecall(gas(), target, ptr, calldatasize(), 0, 0)\n    let size := returndatasize()\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    case 1 {\n        return(ptr, size)\n    }\n}",
                  "src": "1231:373:1"
                }
              ]
            },
            "documentation": "@dev Proxy function. Delegate calls to the address taken on implementation()",
            "id": 113,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1160:2:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1178:0:1"
            },
            "scope": 114,
            "src": "1151:453:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 115,
        "src": "240:1366:1"
      }
    ],
    "src": "0:1606:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/Proxy.sol",
    "exportedSymbols": {
      "Proxy": [
        114
      ]
    },
    "id": 115,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/Users/carlosbuendia/Documents/Projects/consensys/Frontier/TRL/contracts/TRLStorage.sol",
        "file": "./TRLStorage.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 868,
        "src": "26:26:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 1780,
        "src": "53:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 61,
              "name": "TRLStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 867,
              "src": "258:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TRLStorage_$867",
                "typeString": "contract TRLStorage"
              }
            },
            "id": 62,
            "nodeType": "InheritanceSpecifier",
            "src": "258:10:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 63,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1779,
              "src": "270:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1779",
                "typeString": "contract Ownable"
              }
            },
            "id": 64,
            "nodeType": "InheritanceSpecifier",
            "src": "270:7:1"
          }
        ],
        "contractDependencies": [
          867,
          1779
        ],
        "contractKind": "contract",
        "documentation": "A proxy Smart Contract following ERC897. Delegate calls to a target contract accessible via implementation() ",
        "fullyImplemented": true,
        "id": 114,
        "linearizedBaseContracts": [
          114,
          1779,
          867
        ],
        "name": "Proxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 66,
            "name": "logicContract",
            "nodeType": "VariableDeclaration",
            "scope": 114,
            "src": "285:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 65,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "285:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "576:100:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 74,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2211,
                            "src": "594:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "594:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 76,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1727,
                          "src": "608:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "594:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 73,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2214,
                        2215
                      ],
                      "referencedDeclaration": 2214,
                      "src": "586:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "586:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "586:28:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "logicContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "624:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 81,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "640:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "624:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "624:24:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "665:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 72,
                  "id": 85,
                  "nodeType": "Return",
                  "src": "658:11:1"
                }
              ]
            },
            "documentation": "@dev Sets the target address where the calls will be delegated. \n@param _account Target address, that will be accesible via implementation()",
            "id": 87,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setContractLogic",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "528:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "527:18:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "562:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "562:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "561:14:1"
            },
            "scope": 114,
            "src": "502:174:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "841:25:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "32",
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "858:1:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "functionReturnParameters": 91,
                  "id": 93,
                  "nodeType": "Return",
                  "src": "851:8:1"
                }
              ]
            },
            "documentation": "@dev ERC897, whether it is a forwarding (1) or an upgradeable (2) proxy",
            "id": 95,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "proxyType",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "796:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "name": "proxyTypeId",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "820:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "819:21:1"
            },
            "scope": 114,
            "src": "778:88:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "1009:37:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 100,
                    "name": "logicContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 66,
                    "src": "1026:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 99,
                  "id": 101,
                  "nodeType": "Return",
                  "src": "1019:20:1"
                }
              ]
            },
            "documentation": "@dev ERC897, the address the proxy would delegate calls to",
            "id": 103,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "implementation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "976:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "1000:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1000:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "999:9:1"
            },
            "scope": 114,
            "src": "953:93:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "1178:426:1",
              "statements": [
                {
                  "assignments": [
                    107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 107,
                      "name": "target",
                      "nodeType": "VariableDeclaration",
                      "scope": 113,
                      "src": "1188:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 106,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1188:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 110,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 108,
                      "name": "implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103,
                      "src": "1205:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1205:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1188:33:1"
                },
                {
                  "externalReferences": [
                    {
                      "target": {
                        "declaration": 107,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "1368:6:1",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 111,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    calldatacopy(ptr, 0, calldatasize())\n    let result := delegatecall(gas(), target, ptr, calldatasize(), 0, 0)\n    let size := returndatasize()\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    case 1 {\n        return(ptr, size)\n    }\n}",
                  "src": "1231:373:1"
                }
              ]
            },
            "documentation": "@dev Proxy function. Delegate calls to the address taken on implementation()",
            "id": 113,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1160:2:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1178:0:1"
            },
            "scope": 114,
            "src": "1151:453:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 115,
        "src": "240:1366:1"
      }
    ],
    "src": "0:1606:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "1534753930832": {
      "events": {},
      "links": {},
      "address": "0x55c32a754b82b85ec94689fcabf5cc78ff09cf59",
      "transactionHash": "0x849070c5d7e851f5d799aec7c954cab151635b0f9844377dc69c11a18595d32e"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-08-20T21:25:49.772Z"
}